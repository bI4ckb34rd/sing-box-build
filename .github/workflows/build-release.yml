name: Build sing-box

permissions:
  contents: write

env:
  GO_VERSION: ^1.23
  TAG_DEFAULT: with_gvisor,with_reality_server,with_quic,with_utls,with_ech,with_dhcp,with_wireguard,with_acme,with_clash_api
  TAG_ALL: with_gvisor,with_reality_server,with_quic,with_utls,with_ech,with_dhcp,with_wireguard,with_acme,with_clash_api,with_v2ray_api,with_grpc

on:
  workflow_dispatch:
    inputs:
      sing_version:
        description: "sing-box version to build (e.g., v1.11.4)"
        required: true
        default: "dev-next"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        cgo: [0, 1]
        tags: [TAG_DEFAULT, TAG_ALL]

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Clone sing-box
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: ${{ github.event.inputs.sing_version }}
          path: sing-box

      - name: Build sing-box ${{ matrix.os }} (CGO=${{ matrix.cgo }}) with ${{ matrix.tags }}
        run: >-
          set -e
          cd sing-box
          export CGO_ENABLED=${{ matrix.cgo }}
          export GOOS=${{ matrix.os }}
          export GOARCH=amd64
          export GOAMD64=v1
          go build -tags ${{ env[matrix.tags] }} -v -o sing-box-${{ matrix.os }}${{ matrix.cgo == '1' && '-CGO' || '' }}${{ matrix.tags == 'TAG_ALL' && '-all' || '' }} -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=${{ github.event.inputs.sing_version }}' -s -w -buildid=" ./cmd/sing-box
          cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-${{ matrix.os }}${{ matrix.cgo == '1' && '-CGO' || '' }}${{ matrix.tags == 'TAG_ALL' && '-all' || '' }}
          path: sing-box/sing-box-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release notes
        run: |
          cat > release_notes.md << EOF
          # sing-box ${{ github.event.inputs.sing_version }} Build

          Automated build of sing-box ${{ github.event.inputs.sing_version }}

          ## Build variants

          - Standard builds: Default feature set
          - All builds: All features enabled
          - CGO builds: Include features requiring CGO

          ## Build Features

          **Default tag includes:** ${{ env.TAG_DEFAULT }}

          **All tag includes:** ${{ env.TAG_ALL }}
          EOF

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.sing_version }}-build
          name: sing-box ${{ github.event.inputs.sing_version }} Build
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: artifacts/**/*
